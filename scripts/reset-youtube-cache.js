import { PrismaClient } from "@prisma/client";
import dotenv from "dotenv";

dotenv.config();

const prisma = new PrismaClient();

/**
 * Script pour vider le cache des vid√©os YouTube et forcer un nouveau chargement
 * Cela permettra de r√©cup√©rer les vid√©os plus anciennes maintenant que les limites ont √©t√© supprim√©es
 */
async function resetYoutubeCache() {
  try {
    console.log("üßπ D√©but de la r√©initialisation du cache YouTube...");

    // 1. Supprimer toutes les entr√©es de la table youtubeVideoCache
    const deletedVideos = await prisma.youtubeVideoCache.deleteMany({});
    console.log(`‚úÖ ${deletedVideos.count} vid√©os supprim√©es du cache`);

    // 2. Mettre √† jour la date de derni√®re mise √† jour des cha√Ænes pour forcer une actualisation
    const channels = await prisma.youtubeChannel.findMany();

    for (const channel of channels) {
      // R√©initialiser la date de derni√®re mise √† jour √† une date tr√®s ancienne
      await prisma.youtubeChannel.update({
        where: { id: channel.id },
        data: { lastUpdated: new Date(0) }, // 1970-01-01, ce qui forcera une actualisation
      });

      console.log(
        `‚úÖ Canal ${channel.title} (${channel.channelId}) marqu√© pour actualisation`
      );
    }

    console.log(
      "\n‚ú® R√©initialisation termin√©e ! Vous pouvez maintenant red√©marrer l'application pour r√©cup√©rer toutes les vid√©os."
    );
    console.log(
      "‚ÑπÔ∏è Lorsque vous red√©marrez l'application, toutes les vid√©os seront r√©cup√©r√©es √† nouveau, y compris les plus anciennes."
    );
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©initialisation du cache:", error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le script
resetYoutubeCache();
